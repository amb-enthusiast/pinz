var sources = [
	{
		src: 'A',
		attrRecipes: [
			{
				name: "color",
				range: ["red", "green", "blue", "yellow", "orange", "pink", "black"]
			},
			{
				name: "animal",
				range: ["croc", "koala", "kangaroo", "cockatoo"]
			},
			{
				name: "weight",
				low: 0,
				high: 100,
				units: "kg"
			}
		]
	}, 
	{
		src: 'B',
		attrRecipes: [
			{
				name: "level",
				low: 0,
				high: 1000
			}
		]
	}
]
var num = 5;
console.log("Generating " + num + " observables for " + sources.length + " sources.")

var data = {};

for(var srcIndex=0; srcIndex<sources.length; srcIndex++) {
	var docs = [];
	
	for(var i=0; i<num; i++) {
		var doc = {
			id: sources[srcIndex].src + i,
			src: sources[srcIndex].src,
			t: new Date(),
			desc: "autogenerated observable",
			attrs: generateAttrs(sources[srcIndex].attrRecipes),
			geos: [
				{
					id: "location",
					loc: {
						type: "Point",
						coordinates : getCoordinates(39.7392, 104.9847, 25) 
					}
				}
			]
		};
		docs.push(doc);
	}
	data[sources[srcIndex].src] = docs;
}
//console.log(JSON.stringify(data, null, 2));

function generateAttrs(attrRecipes) {
	var attrs = [];
	for (var recipeIndex=0; recipeIndex<attrRecipes.length; recipeIndex++) {
		var recipe = attrRecipes[recipeIndex];
		var val = "";
		if ('range' in recipe) {
			val = recipe.range[randomFromInterval(0, recipe.range.length)];
		} else if ('low' in recipe || 'high' in recipe) {
			val = randomFromInterval(recipe.low, recipe.high) 
		}
		var attr = {
			k: recipe.name,
			v: val
		}
		if ('units' in recipe) attr.u = recipe.units;
		attrs.push(attr);
	}
	return attrs;
}

//stackoverflow.com/questions/4959975/generate-random-value-between-two-numbers-in-javascript
function randomFromInterval(from, to) {
	var random = Math.floor(Math.random() * (to-from)) + from;
	//console.log("from: " + from + ", to: " + to + ", random: " + random);
	return random;
}

function getCoordinates(cLat, cLon, maxDis_meters) {
	var ONE_METER = 0.00001; //rough estimation of meter in decimal degrees
	var maxDis = maxDis_meters * ONE_METER;
	var coor = []; //lon, lat geojson
	coor[0] = randomFromInterval(cLon-maxDis, cLon+maxDis);
	coor[1] = randomFromInterval(cLat-maxDis, cLon+maxDis);
	return coor;
}